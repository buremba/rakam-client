# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class EmailActionConfig(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        EmailActionConfig - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'title': 'str',
            'content': 'str',
            'column_name': 'str',
            'default_values': 'dict(str, str)',
            'rich_text': 'bool'
        }

        self.attribute_map = {
            'title': 'title',
            'content': 'content',
            'column_name': 'columnName',
            'default_values': 'defaultValues',
            'rich_text': 'richText'
        }

        self._title = None
        self._content = None
        self._column_name = None
        self._default_values = None
        self._rich_text = None

    @property
    def title(self):
        """
        Gets the title of this EmailActionConfig.


        :return: The title of this EmailActionConfig.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """
        Sets the title of this EmailActionConfig.


        :param title: The title of this EmailActionConfig.
        :type: str
        """
        self._title = title

    @property
    def content(self):
        """
        Gets the content of this EmailActionConfig.


        :return: The content of this EmailActionConfig.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """
        Sets the content of this EmailActionConfig.


        :param content: The content of this EmailActionConfig.
        :type: str
        """
        self._content = content

    @property
    def column_name(self):
        """
        Gets the column_name of this EmailActionConfig.


        :return: The column_name of this EmailActionConfig.
        :rtype: str
        """
        return self._column_name

    @column_name.setter
    def column_name(self, column_name):
        """
        Sets the column_name of this EmailActionConfig.


        :param column_name: The column_name of this EmailActionConfig.
        :type: str
        """
        self._column_name = column_name

    @property
    def default_values(self):
        """
        Gets the default_values of this EmailActionConfig.


        :return: The default_values of this EmailActionConfig.
        :rtype: dict(str, str)
        """
        return self._default_values

    @default_values.setter
    def default_values(self, default_values):
        """
        Sets the default_values of this EmailActionConfig.


        :param default_values: The default_values of this EmailActionConfig.
        :type: dict(str, str)
        """
        self._default_values = default_values

    @property
    def rich_text(self):
        """
        Gets the rich_text of this EmailActionConfig.


        :return: The rich_text of this EmailActionConfig.
        :rtype: bool
        """
        return self._rich_text

    @rich_text.setter
    def rich_text(self, rich_text):
        """
        Sets the rich_text of this EmailActionConfig.


        :param rich_text: The rich_text of this EmailActionConfig.
        :type: bool
        """
        self._rich_text = rich_text

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
