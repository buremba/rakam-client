# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class RetentionQuery(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        RetentionQuery - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'project': 'str',
            'connector_field': 'str',
            'first_action': 'RetentionAction',
            'returning_action': 'RetentionAction',
            'dimension': 'str',
            'date_unit': 'str',
            'start_date': 'date',
            'end_date': 'date'
        }

        self.attribute_map = {
            'project': 'project',
            'connector_field': 'connector_field',
            'first_action': 'first_action',
            'returning_action': 'returning_action',
            'dimension': 'dimension',
            'date_unit': 'date_unit',
            'start_date': 'startDate',
            'end_date': 'endDate'
        }

        self._project = None
        self._connector_field = None
        self._first_action = None
        self._returning_action = None
        self._dimension = None
        self._date_unit = None
        self._start_date = None
        self._end_date = None

    @property
    def project(self):
        """
        Gets the project of this RetentionQuery.


        :return: The project of this RetentionQuery.
        :rtype: str
        """
        return self._project

    @project.setter
    def project(self, project):
        """
        Sets the project of this RetentionQuery.


        :param project: The project of this RetentionQuery.
        :type: str
        """
        self._project = project

    @property
    def connector_field(self):
        """
        Gets the connector_field of this RetentionQuery.


        :return: The connector_field of this RetentionQuery.
        :rtype: str
        """
        return self._connector_field

    @connector_field.setter
    def connector_field(self, connector_field):
        """
        Sets the connector_field of this RetentionQuery.


        :param connector_field: The connector_field of this RetentionQuery.
        :type: str
        """
        self._connector_field = connector_field

    @property
    def first_action(self):
        """
        Gets the first_action of this RetentionQuery.


        :return: The first_action of this RetentionQuery.
        :rtype: RetentionAction
        """
        return self._first_action

    @first_action.setter
    def first_action(self, first_action):
        """
        Sets the first_action of this RetentionQuery.


        :param first_action: The first_action of this RetentionQuery.
        :type: RetentionAction
        """
        self._first_action = first_action

    @property
    def returning_action(self):
        """
        Gets the returning_action of this RetentionQuery.


        :return: The returning_action of this RetentionQuery.
        :rtype: RetentionAction
        """
        return self._returning_action

    @returning_action.setter
    def returning_action(self, returning_action):
        """
        Sets the returning_action of this RetentionQuery.


        :param returning_action: The returning_action of this RetentionQuery.
        :type: RetentionAction
        """
        self._returning_action = returning_action

    @property
    def dimension(self):
        """
        Gets the dimension of this RetentionQuery.


        :return: The dimension of this RetentionQuery.
        :rtype: str
        """
        return self._dimension

    @dimension.setter
    def dimension(self, dimension):
        """
        Sets the dimension of this RetentionQuery.


        :param dimension: The dimension of this RetentionQuery.
        :type: str
        """
        self._dimension = dimension

    @property
    def date_unit(self):
        """
        Gets the date_unit of this RetentionQuery.


        :return: The date_unit of this RetentionQuery.
        :rtype: str
        """
        return self._date_unit

    @date_unit.setter
    def date_unit(self, date_unit):
        """
        Sets the date_unit of this RetentionQuery.


        :param date_unit: The date_unit of this RetentionQuery.
        :type: str
        """
        allowed_values = ["DAY", "WEEK", "MONTH"]
        if date_unit not in allowed_values:
            raise ValueError(
                "Invalid value for `date_unit`, must be one of {0}"
                .format(allowed_values)
            )
        self._date_unit = date_unit

    @property
    def start_date(self):
        """
        Gets the start_date of this RetentionQuery.


        :return: The start_date of this RetentionQuery.
        :rtype: date
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """
        Sets the start_date of this RetentionQuery.


        :param start_date: The start_date of this RetentionQuery.
        :type: date
        """
        self._start_date = start_date

    @property
    def end_date(self):
        """
        Gets the end_date of this RetentionQuery.


        :return: The end_date of this RetentionQuery.
        :rtype: date
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """
        Sets the end_date of this RetentionQuery.


        :param end_date: The end_date of this RetentionQuery.
        :type: date
        """
        self._end_date = end_date

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
