//
// FunnelAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class FunnelAPI: APIBase {
    
        /**
         
         Execute query
         
         - GET /funnel/analyze
         - 
         - API Key:
           - type: apiKey read_key 
           - name: read_key
         
         - parameter funnelQuery: (body) 

         - returns: RequestBuilder<Void> 
         */
        public class func analyze(funnelQuery funnelQuery: FunnelQuery) -> RequestBuilder<Void> {
            let path = "/funnel/analyze"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = funnelQuery.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Execute query
         
         - POST /funnel/analyze
         - 
         - API Key:
           - type: apiKey read_key 
           - name: read_key
         - examples: [{contentType=application/json, example={
  "result" : [ [ "{}" ] ],
  "metadata" : [ {
    "nullable" : true,
    "descriptiveName" : "aeiou",
    "unique" : true,
    "name" : "aeiou",
    "description" : "aeiou",
    "type" : "aeiou",
    "category" : "aeiou"
  } ],
  "failed" : true,
  "error" : {
    "query" : "aeiou",
    "sqlState" : "aeiou",
    "errorCode" : 123,
    "message" : "aeiou"
  },
  "properties" : {
    "key" : "{}"
  }
}}]
         
         - parameter funnelQuery: (body) 

         - returns: RequestBuilder<QueryResult> 
         */
        public class func analyze(funnelQuery funnelQuery: FunnelQuery) -> RequestBuilder<QueryResult> {
            let path = "/funnel/analyze"
            let URLString = SwaggerClientAPI.basePath + path
            
            let parameters = funnelQuery.encodeToJSON() as? [String:AnyObject]

            let requestBuilder: RequestBuilder<QueryResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
        }
    
    }
}
