//
// AutomationAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class AutomationAPI: APIBase {
    
        /**
         
         Activate rule
         
         - POST /automation/activate
         - 
         - API Key:
           - type: apiKey master_key 
           - name: master_key
         - examples: [{contentType=application/json, example={
  "success" : true,
  "message" : "aeiou"
}}]
         
         - parameter project: (form) 
         - parameter id: (form) 

         - returns: RequestBuilder<JsonResponse> 
         */
        public class func activateRule(project project: String?, id: Int?) -> RequestBuilder<JsonResponse> {
            let path = "/automation/activate"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "project": project,
                "id": id
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<JsonResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Add scenario
         
         - POST /automation/add
         - 
         - API Key:
           - type: apiKey master_key 
           - name: master_key
         - examples: [{contentType=application/json, example={
  "success" : true,
  "message" : "aeiou"
}}]

         - returns: RequestBuilder<JsonResponse> 
         */
        public class func addRule() -> RequestBuilder<JsonResponse> {
            let path = "/automation/add"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<JsonResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Deactivate rule
         
         - POST /automation/deactivate
         - 
         - API Key:
           - type: apiKey master_key 
           - name: master_key
         - examples: [{contentType=application/json, example={
  "success" : true,
  "message" : "aeiou"
}}]
         
         - parameter project: (form) 
         - parameter id: (form) 

         - returns: RequestBuilder<JsonResponse> 
         */
        public class func deactivateRule(project project: String?, id: Int?) -> RequestBuilder<JsonResponse> {
            let path = "/automation/deactivate"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "project": project,
                "id": id
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<JsonResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         List scenarios
         
         - POST /automation/list
         - 
         - API Key:
           - type: apiKey master_key 
           - name: master_key
         - examples: [{contentType=application/json, example=[ {
  "is_active" : true,
  "project" : "aeiou",
  "id" : 123,
  "scenarios" : [ {
    "filter" : "aeiou",
    "threshold" : {
      "fieldName" : "aeiou",
      "aggregation" : "aeiou",
      "value" : 123456789
    },
    "collection" : "aeiou"
  } ],
  "actions" : [ {
    "type" : "aeiou",
    "value" : "aeiou"
  } ],
  "custom_data" : "aeiou"
} ]}]
         
         - parameter project: (form) 

         - returns: RequestBuilder<[AutomationRule]> 
         */
        public class func listRules(project project: String?) -> RequestBuilder<[AutomationRule]> {
            let path = "/automation/list"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "project": project
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[AutomationRule]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Remove rule
         
         - POST /automation/remove
         - 
         - API Key:
           - type: apiKey master_key 
           - name: master_key
         - examples: [{contentType=application/json, example={
  "success" : true,
  "message" : "aeiou"
}}]
         
         - parameter project: (form) 
         - parameter id: (form) 

         - returns: RequestBuilder<JsonResponse> 
         */
        public class func removeRule(project project: String?, id: Int?) -> RequestBuilder<JsonResponse> {
            let path = "/automation/remove"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "project": project,
                "id": id
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<JsonResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
    }
}
