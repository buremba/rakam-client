//
// AbtestingAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {
    
    public class AbtestingAPI: APIBase {
    
        /**
         
         Create test
         
         - POST /ab-testing/create
         - 
         - API Key:
           - type: apiKey master_key 
           - name: master_key
         - examples: [{contentType=application/json, example={
  "success" : true,
  "message" : "aeiou"
}}]

         - returns: RequestBuilder<JsonResponse> 
         */
        public class func create() -> RequestBuilder<JsonResponse> {
            let path = "/ab-testing/create"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<JsonResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
        }
    
        /**
         
         Delete report
         
         - POST /ab-testing/delete
         - 
         - API Key:
           - type: apiKey master_key 
           - name: master_key
         - examples: [{contentType=application/json, example={
  "success" : true,
  "message" : "aeiou"
}}]
         
         - parameter project: (form) 
         - parameter id: (form) 

         - returns: RequestBuilder<JsonResponse> 
         */
        public class func delete(project project: String?, id: Int?) -> RequestBuilder<JsonResponse> {
            let path = "/ab-testing/delete"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "project": project,
                "id": id
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<JsonResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Get report
         
         - POST /ab-testing/get
         - 
         - API Key:
           - type: apiKey read_key 
           - name: read_key
         - examples: [{contentType=application/json, example={
  "connectorField" : "aeiou",
  "goal" : {
    "filter" : "aeiou",
    "collection" : "aeiou"
  },
  "name" : "aeiou",
  "options" : "{}",
  "project" : "aeiou",
  "variants" : [ {
    "data" : "{}",
    "name" : "aeiou",
    "weight" : 123
  } ],
  "id" : 123,
  "collectionName" : "aeiou"
}}]
         
         - parameter project: (form) 
         - parameter id: (form) 

         - returns: RequestBuilder<ABTestingReport> 
         */
        public class func get(project project: String?, id: Int?) -> RequestBuilder<ABTestingReport> {
            let path = "/ab-testing/get"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "project": project,
                "id": id
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<ABTestingReport>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         List reports
         
         - POST /ab-testing/list
         - 
         - API Key:
           - type: apiKey read_key 
           - name: read_key
         - examples: [{contentType=application/json, example=[ {
  "connectorField" : "aeiou",
  "goal" : {
    "filter" : "aeiou",
    "collection" : "aeiou"
  },
  "name" : "aeiou",
  "options" : "{}",
  "project" : "aeiou",
  "variants" : [ {
    "data" : "{}",
    "name" : "aeiou",
    "weight" : 123
  } ],
  "id" : 123,
  "collectionName" : "aeiou"
} ]}]
         
         - parameter project: (form) 

         - returns: RequestBuilder<[ABTestingReport]> 
         */
        public class func list(project project: String?) -> RequestBuilder<[ABTestingReport]> {
            let path = "/ab-testing/list"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [
                "project": project
            ]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<[ABTestingReport]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: false)
        }
    
        /**
         
         Update report
         
         - POST /ab-testing/update
         - 
         - API Key:
           - type: apiKey master_key 
           - name: master_key
         - examples: [{contentType=application/json, example={
  "connectorField" : "aeiou",
  "goal" : {
    "filter" : "aeiou",
    "collection" : "aeiou"
  },
  "name" : "aeiou",
  "options" : "{}",
  "project" : "aeiou",
  "variants" : [ {
    "data" : "{}",
    "name" : "aeiou",
    "weight" : 123
  } ],
  "id" : 123,
  "collectionName" : "aeiou"
}}]

         - returns: RequestBuilder<ABTestingReport> 
         */
        public class func update() -> RequestBuilder<ABTestingReport> {
            let path = "/ab-testing/update"
            let URLString = SwaggerClientAPI.basePath + path
            
            let nillableParameters: [String:AnyObject?] = [:]
            let parameters = APIHelper.rejectNil(nillableParameters)

            let requestBuilder: RequestBuilder<ABTestingReport>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

            return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
        }
    
    }
}
